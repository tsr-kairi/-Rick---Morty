import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import imageLoader from "../imageLoader";
import { Character, GetCharacterResults } from "../types";

const Home: NextPage<{ characters: Character[] }> = ({ characters }) => {
  return (
    <div className="text-2xl font-bold text-[#212529]">
      <Head>
        <title>Rick & Morty | Home</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1 className="md:text-8xl text-4xl font-black mb-4 text-black text-center py-8">
        The Rick and Morty
      </h1>
      <div className="grid md:grid-cols-2 justify-center items-center md:px-24 px-8 py-8 md:gap-12 gap-6 bg-[#24282f]">
        {characters.map((character) => {
          return (
            <div key={character.id} className="flex rounded-lg bg-[#3c3e44]">
              <Image
                loader={imageLoader}
                unoptimized
                src={character.image}
                alt={character.name}
                width="250"
                height="250"
              />
              <div className="flex flex-col justify-center items-start ml-4 bg-[#3c3e44] text-[#fff]">
                <Link href={`/characters/${character.id}`}>
                  <a>
                    <h3 className="mb-3">{character.name}</h3>
                  </a>
                </Link>
                <div className="flex gap-x-2 items-center">
                  <span
                    className={`capitalize ${
                      character.status === "Dead"
                        ? "line-through text-xl text-red-500 font-normal"
                        : "text-xl text-blue-500 font-normal"
                    } + ${character.status === "unknown" && "text-yellow-500"}`}
                  >
                    {character.status}
                  </span>
                  <span className="text-xl font-normal">{character.species}</span>
                  <span>{character.type}</span>
                </div>
              </div>
            </div>
          );
        })}
      </div>
    </div>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const res = await fetch("https://rickandmortyapi.com/api/character");
  const { results }: GetCharacterResults = await res.json();

  return {
    props: {
      characters: results,
    },
  };
};

export default Home;
